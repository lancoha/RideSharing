@model RideSharing.ViewModels.RideDetailsViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<RideSharing.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Ride details";
    var currentUser = await UserManager.GetUserAsync(User);
    bool isOwner = currentUser != null && currentUser.Id == Model.DriverId;
    bool hasActiveRequest = Model.ExistingRequestStatus != "Deleted" && Model.ExistingRequestStatus != null;
    bool hasAcceptedRequest = ViewBag.HasAcceptedRequest as bool? ?? false;
    var acceptedPassengers = ViewBag.AcceptedPassengers as List<dynamic> ?? new List<dynamic>();
}

<h2>@ViewData["Title"]</h2>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Driver: @Model.DriverEmail</h4>
        
        <dl class="row">
            <dt class="col-sm-3 fw-bold">Vehicle:</dt>
            <dd class="col-sm-9">@Model.VehicleName</dd>

            <dt class="col-sm-3 fw-bold">Origin:</dt>
            <dd class="col-sm-9">@Model.Origin</dd>

            <dt class="col-sm-3 fw-bold">Destination:</dt>
            <dd class="col-sm-9">@Model.Destination</dd>

            <dt class="col-sm-3 fw-bold">Ride date:</dt>
            <dd class="col-sm-9">@Model.RideDateTime.ToString("dd/MM/yyyy HH:mm")</dd>

            <dt class="col-sm-3 fw-bold">Empty seats:</dt>
            <dd class="col-sm-9">@Model.AvailableSeats</dd>

            <dt class="col-sm-3 fw-bold">Price per seat (€):</dt>
            <dd class="col-sm-9">@Model.PricePerSeat €</dd>

            <dt class="col-sm-3 fw-bold">Possible pickup/drop off locations:</dt>
            <dd class="col-sm-9">@Model.PickupLocation</dd>

            <dt class="col-sm-3 fw-bold">Route description:</dt>
            <dd class="col-sm-9">@Model.RideDescription</dd>

            <dt class="col-sm-3 fw-bold">Estimated distance:</dt>
            <dd class="col-sm-9">@Model.TotalDistance</dd>

            <dt class="col-sm-3 fw-bold">Estimated duration:</dt>
            <dd class="col-sm-9">@Model.TotalDuration</dd>
        </dl>
        
        @if (isOwner && ViewBag.AcceptedPassengers != null && ViewBag.AcceptedPassengers.Count > 0)
        {
        <h4>Passengers:</h4>
             <ul class="list-group">
                @foreach (var passenger in ViewBag.AcceptedPassengers)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@passenger.Email</span>
                        <a href="@Url.Action("Details", "RideRequests", new { id = passenger.Id })" class="btn btn-primary">View Request</a>
                    </li>
                }
            </ul>
        }

        <div class="d-flex gap-2">
            @if (isOwner)
            {
                <a asp-action="Delete" asp-controller="Rides" asp-route-id="@Model.Id" class="btn btn-danger">Delete Ride</a>

                @if (hasAcceptedRequest)
                {
                    <button class="btn btn-warning" disabled>Edit Ride (Request exists)</button>
                }
                else
                {
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit Ride</a>
                }
            }
            else if (!hasActiveRequest) 
            {
                <a asp-action="Create" asp-controller="RideRequests" asp-route-rideId="@Model.Id" class="btn btn-primary">Request a ride</a>
            }
            else
            {
                @if (!string.IsNullOrEmpty(Model.ExistingRequestStatus))
                {
                    if (Model.ExistingRequestStatus == "Accepted")
                    {
                        <p class="text-success mt-2 fw-bold">Request accepted</p>
                    }
                    else if (Model.ExistingRequestStatus == "Rejected")
                    {
                        <p class="text-danger mt-2 fw-bold">Request rejected</p>
                    }
                    else if (Model.ExistingRequestStatus == "Pending")
                    {
                        <p class="text-warning mt-2 fw-bold">Request pending</p>
                    }
                    else
                    {
                        <p class="text-secondary mt-2 fw-bold">Unknown status</p>
                    }
                }

            }
            <a class="btn btn-secondary" onclick="history.back()">Back</a>
        </div>
    </div>
</div>
