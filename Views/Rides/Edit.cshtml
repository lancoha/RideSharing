@model RideSharing.ViewModels.RideEditViewModel

@{
    ViewData["Title"] = "Edit Vo≈ænjo";
}

<h2>@ViewData["Title"]</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Origin" class="control-label"></label>
        <input asp-for="Origin" class="form-control" id="originInput" />
        <span asp-validation-for="Origin" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Destination" class="control-label"></label>
        <input asp-for="Destination" class="form-control" id="destinationInput" />
        <span asp-validation-for="Destination" class="text-danger"></span>
    </div>

    <div class="form-group">
        <button type="button" class="btn btn-primary" onclick="fetchRouteInfo()">Get Route Info</button>
    </div>

    <div class="form-group">
        <label asp-for="TotalDistance" class="control-label">Total Distance:</label>
        <input asp-for="TotalDistance" class="form-control" id="totalDistance" value="@Model.TotalDistance"/>
        <span asp-validation-for="TotalDistance" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="TotalDuration" class="control-label">Total Duration:</label>
        <input asp-for="TotalDuration" class="form-control" id="totalDuration" value="@Model.TotalDuration"/>
        <span asp-validation-for="TotalDuration" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="RideDateTime" class="control-label"></label>
        <input asp-for="RideDateTime" class="form-control" type="datetime-local" />
        <span asp-validation-for="RideDateTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="VehicleId" class="control-label"></label>
        <select asp-for="VehicleId" class="form-control" asp-items="ViewBag.Vehicles">
            <option value="">-- Izberite vozilo --</option>
        </select>
        <span asp-validation-for="VehicleId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AvailableSeats" class="control-label"></label>
        <input asp-for="AvailableSeats" class="form-control" type="number" min="1" max="10" />
        <span asp-validation-for="AvailableSeats" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PricePerSeat" class="control-label"></label>
        <input asp-for="PricePerSeat" class="form-control" type="number" step="0.01" min="0" max="100" />
        <span asp-validation-for="PricePerSeat" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PickupLocation" class="control-label"></label>
        <input asp-for="PickupLocation" class="form-control" />
        <span asp-validation-for="PickupLocation" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="RideDescription" class="control-label"></label>
        <textarea asp-for="RideDescription" class="form-control" rows="3"></textarea>
        <span asp-validation-for="RideDescription" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a class="btn btn-secondary" onclick="history.back()">Back</a>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function fetchRouteInfo() {
            var origin = document.getElementById("originInput").value;
            var destination = document.getElementById("destinationInput").value;

            if (!origin || !destination) {
                alert("Please enter both origin and destination.");
                return;
            }

            fetch(`/api/maps/getRouteInfo?origin=${encodeURIComponent(origin)}&destination=${encodeURIComponent(destination)}`)
                .then(response => response.json())
                .then(data => {
                    if (data.totalDistance && data.totalDuration) {
                        document.getElementById("totalDistance").value = data.totalDistance;
                        document.getElementById("totalDuration").value = data.totalDuration;
                    } else {
                        alert("Failed to fetch route information. Please try again.");
                    }
                })
                .catch(error => {
                    console.error("Error fetching route info:", error);
                    alert("An error occurred while fetching route data.");
                });
        }
    </script>
}
